{"version":3,"sources":["Component/Searchbar/Searchbar.js","Component/ImageGalleryItem/ImageGalleryItem.js","Component/ImageGallery/ImageGallery.js","Component/Button/Button.js","Component/Loader/Loader.js","Component/Modal/Modal.js","api.js","App.js","index.js"],"names":["Searchbar","state","value","handleChange","e","setState","currentTarget","handleSubmit","preventDefault","props","changeQuery","this","className","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","Component","defaultProps","ImageGalleryItem","url","alt","src","ImageGallery","images","openModal","map","id","webformatURL","tags","largeImageURL","onClick","Button","Spiner","color","height","width","modalRoot","document","querySelector","Modal","handleKeyDown","code","console","log","onClose","handleBackdropClick","event","target","window","addEventListener","removeEventListener","createPortal","children","fetchData","searchQuery","currentPage","pageSize","axios","get","then","response","data","hits","App","isLoading","showModal","modalImg","modalAlt","error","onChangeQuery","query","fetchImages","options","prevState","windowScroll","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","prevProps","shouldRenderLoadMoreButton","length","style","textAlign","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b1aa04af.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Searchbar extends Component {\r\n  static defaultProps = {\r\n    value: \"\",\r\n  };\r\n\r\n  static propTypes = {\r\n    value: PropTypes.string,\r\n  };\r\n\r\n  state = {\r\n    value: \"\",\r\n    // value: this.props.name,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ value: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.changeQuery(this.state.value);\r\n    this.setState({ value: \"\" });\r\n    //  this.props.onSubmit(this.state);\r\n    // this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n            value={value}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst ImageGalleryItem = ({ url, alt }) => {\r\n  return <img src={url} alt={alt} className=\"ImageGalleryItem-image\" />;\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, openModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ id, webformatURL, tags, largeImageURL }) => {\r\n        return (\r\n          <li\r\n            className=\"ImageGalleryItem\"\r\n            key={id}\r\n            onClick={() => {\r\n              openModal(largeImageURL, tags);\r\n            }}\r\n          >\r\n            <ImageGalleryItem url={webformatURL} alt={tags} />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <div className=\"button-conteiner\">\r\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Spiner = () => {\r\n  return (\r\n    <div className=\"spinner-conteiner\">\r\n      <Loader type=\"Circles\" color=\"#00BFFF\" height={100} width={100} />\r\n    </div>\r\n  );\r\n};\r\nexport default Spiner;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    console.log('Modal componentDidMount');\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('Modal componentWillUnmount');\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      console.log('Нажали ESC, нужно закрыть модалку');\r\n\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    // console.log('Кликнули в бекдроп');\r\n    // console.log('currentTarget: ', event.currentTarget);\r\n    // console.log('target: ', event.target);\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst KEY = \"21347916-d2cb58bac2dcf6ecd9205e483\";\r\n\r\nconst fetchData = ({ searchQuery = \"\", currentPage = 1, pageSize = 12 }) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=${pageSize}`\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\n\r\nexport default fetchData;\r\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport SearchBar from \"./Component/Searchbar\";\nimport ImageGallery from \"./Component/ImageGallery\";\nimport Button from \"./Component/Button\";\nimport Spinner from \"./Component/Loader\";\nimport Modal from \"./Component/Modal\";\nimport fetchData from \"./api\";\n\nclass App extends Component {\n  state = {\n    searchQuery: \"\",\n    currentPage: 1,\n    images: [],\n    isLoading: false,\n    showModal: false,\n    modalImg: \"\",\n    modalAlt: \"\",\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  onChangeQuery = (query) => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n\n  fetchImages = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { searchQuery, currentPage };\n\n    this.setState({ isLoading: true });\n\n    fetchData(options)\n      .then((images) => {\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...images],\n          currentPage: prevState.currentPage + 1,\n        }));\n        this.windowScroll();\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  windowScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  openModal = (url, alt) => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      modalImg: url,\n      modalAlt: alt,\n    }));\n  };\n\n  render() {\n    const { error, images, isLoading, showModal, modalImg, modalAlt } =\n      this.state;\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n    return (\n      <>\n        <SearchBar changeQuery={this.onChangeQuery} />\n\n        {error && (\n          <h1 style={{ color: \"#ff0000\", textAlign: \"center\" }}>\n            Something going wrong\n          </h1>\n        )}\n\n        <ImageGallery images={images} openModal={this.openModal} />\n\n        {isLoading && <Spinner />}\n\n        {shouldRenderLoadMoreButton && <Button onClick={this.fetchImages} />}\n\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={modalImg} alt={modalAlt} />\n          </Modal>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./styles.css\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}